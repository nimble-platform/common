//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2020.06.30 at 05:52:41 PM EET 
//


package eu.nimble.service.model.ubl.catalogue;

import java.io.Serializable;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import javax.persistence.Basic;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.Inheritance;
import javax.persistence.InheritanceType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Transient;
import javax.persistence.UniqueConstraint;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlSchemaType;
import javax.xml.bind.annotation.XmlType;
import javax.xml.datatype.XMLGregorianCalendar;
import eu.nimble.service.model.ubl.commonaggregatecomponents.CatalogueLineType;
import eu.nimble.service.model.ubl.commonaggregatecomponents.ClauseType;
import eu.nimble.service.model.ubl.commonaggregatecomponents.PartyType;
import eu.nimble.service.model.ubl.commonbasiccomponents.TextType;
import org.hibernate.annotations.Cascade;
import org.jvnet.hyperjaxb3.item.ItemUtils;
import org.jvnet.hyperjaxb3.xml.bind.annotation.adapters.XMLGregorianCalendarAsDate;
import org.jvnet.hyperjaxb3.xml.bind.annotation.adapters.XmlAdapterUtils;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * <p>Java class for CatalogueType complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="CatalogueType"&gt;
 *   &lt;complexContent&gt;
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
 *       &lt;sequence&gt;
 *         &lt;element ref="{urn:oasis:names:specification:ubl:schema:xsd:CommonBasicComponents-2}ID"/&gt;
 *         &lt;element ref="{urn:oasis:names:specification:ubl:schema:xsd:CommonBasicComponents-2}UUID" minOccurs="0"/&gt;
 *         &lt;element ref="{urn:oasis:names:specification:ubl:schema:xsd:CommonBasicComponents-2}Name" minOccurs="0"/&gt;
 *         &lt;element ref="{urn:oasis:names:specification:ubl:schema:xsd:CommonBasicComponents-2}IssueDate"/&gt;
 *         &lt;element ref="{urn:oasis:names:specification:ubl:schema:xsd:CommonAggregateComponents-2}ProviderParty"/&gt;
 *         &lt;element ref="{urn:oasis:names:specification:ubl:schema:xsd:CommonBasicComponents-2}PermittedPartyID" maxOccurs="unbounded" minOccurs="0"/&gt;
 *         &lt;element ref="{urn:oasis:names:specification:ubl:schema:xsd:CommonBasicComponents-2}RestrictedPartyID" maxOccurs="unbounded" minOccurs="0"/&gt;
 *         &lt;element ref="{urn:oasis:names:specification:ubl:schema:xsd:CommonAggregateComponents-2}CatalogueLine" maxOccurs="unbounded"/&gt;
 *         &lt;element ref="{urn:oasis:names:specification:ubl:schema:xsd:CommonAggregateComponents-2}Clause" maxOccurs="unbounded" minOccurs="0"/&gt;
 *       &lt;/sequence&gt;
 *     &lt;/restriction&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "CatalogueType", propOrder = {
    "id",
    "uuid",
    "name",
    "issueDate",
    "providerParty",
    "permittedPartyID",
    "restrictedPartyID",
    "catalogueLine",
    "clause"
})
@Entity(name = "CatalogueType")
@Table(name = "Catalogue_Type", uniqueConstraints = {
    @UniqueConstraint(columnNames = {
        "UUID"
    })
})
@Inheritance(strategy = InheritanceType.JOINED)
public class CatalogueType
    implements Serializable, Equals
{

    private final static long serialVersionUID = 1L;
    @XmlElement(name = "ID", namespace = "urn:oasis:names:specification:ubl:schema:xsd:CommonBasicComponents-2", required = true)
    protected String id;
    @XmlElement(name = "UUID", namespace = "urn:oasis:names:specification:ubl:schema:xsd:CommonBasicComponents-2")
    protected String uuid;
    @XmlElement(name = "Name", namespace = "urn:oasis:names:specification:ubl:schema:xsd:CommonBasicComponents-2")
    protected TextType name;
    @XmlElement(name = "IssueDate", namespace = "urn:oasis:names:specification:ubl:schema:xsd:CommonBasicComponents-2", required = true)
    @XmlSchemaType(name = "date")
    protected XMLGregorianCalendar issueDate;
    @XmlElement(name = "ProviderParty", namespace = "urn:oasis:names:specification:ubl:schema:xsd:CommonAggregateComponents-2", required = true)
    protected PartyType providerParty;
    @XmlElement(name = "PermittedPartyID", namespace = "urn:oasis:names:specification:ubl:schema:xsd:CommonBasicComponents-2")
    protected List<String> permittedPartyID;
    @XmlElement(name = "RestrictedPartyID", namespace = "urn:oasis:names:specification:ubl:schema:xsd:CommonBasicComponents-2")
    protected List<String> restrictedPartyID;
    @XmlElement(name = "CatalogueLine", namespace = "urn:oasis:names:specification:ubl:schema:xsd:CommonAggregateComponents-2", required = true)
    protected List<CatalogueLineType> catalogueLine;
    @XmlElement(name = "Clause", namespace = "urn:oasis:names:specification:ubl:schema:xsd:CommonAggregateComponents-2")
    protected List<ClauseType> clause;
    @XmlAttribute(name = "Hjid")
    protected Long hjid;
    protected transient List<CatalogueTypePermittedPartyIDItem> permittedPartyIDItems;
    protected transient List<CatalogueTypeRestrictedPartyIDItem> restrictedPartyIDItems;

    /**
     * Gets the value of the id property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "ID", length = 255)
    public String getID() {
        return id;
    }

    /**
     * Sets the value of the id property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setID(String value) {
        this.id = value;
    }

    /**
     * Gets the value of the uuid property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "UUID", length = 255)
    public String getUUID() {
        return uuid;
    }

    /**
     * Sets the value of the uuid property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setUUID(String value) {
        this.uuid = value;
    }

    /**
     * Gets the value of the name property.
     * 
     * @return
     *     possible object is
     *     {@link TextType }
     *     
     */
    @ManyToOne(targetEntity = TextType.class, cascade = {
        javax.persistence.CascadeType.ALL
    })
    @JoinColumn(name = "NAME__CATALOGUE_TYPE_HJID")
    public TextType getName() {
        return name;
    }

    /**
     * Sets the value of the name property.
     * 
     * @param value
     *     allowed object is
     *     {@link TextType }
     *     
     */
    public void setName(TextType value) {
        this.name = value;
    }

    /**
     * Gets the value of the issueDate property.
     * 
     * @return
     *     possible object is
     *     {@link XMLGregorianCalendar }
     *     
     */
    @Transient
    public XMLGregorianCalendar getIssueDate() {
        return issueDate;
    }

    /**
     * Sets the value of the issueDate property.
     * 
     * @param value
     *     allowed object is
     *     {@link XMLGregorianCalendar }
     *     
     */
    public void setIssueDate(XMLGregorianCalendar value) {
        this.issueDate = value;
    }

    /**
     * Gets the value of the providerParty property.
     * 
     * @return
     *     possible object is
     *     {@link PartyType }
     *     
     */
    @ManyToOne(targetEntity = PartyType.class, cascade = {
        javax.persistence.CascadeType.PERSIST,javax.persistence.CascadeType.MERGE,javax.persistence.CascadeType.REFRESH
    })
    @JoinColumn(name = "PROVIDER_PARTY_CATALOGUE_TYP_0")
    public PartyType getProviderParty() {
        return providerParty;
    }

    /**
     * Sets the value of the providerParty property.
     * 
     * @param value
     *     allowed object is
     *     {@link PartyType }
     *     
     */
    public void setProviderParty(PartyType value) {
        this.providerParty = value;
    }

    /**
     * Gets the value of the permittedPartyID property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the permittedPartyID property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getPermittedPartyID().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link String }
     * 
     * 
     */
    @Transient
    public List<String> getPermittedPartyID() {
        if (permittedPartyID == null) {
            permittedPartyID = new ArrayList<String>();
        }
        return this.permittedPartyID;
    }

    /**
     * 
     * 
     */
    public void setPermittedPartyID(List<String> permittedPartyID) {
        this.permittedPartyID = permittedPartyID;
    }

    /**
     * Gets the value of the restrictedPartyID property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the restrictedPartyID property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getRestrictedPartyID().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link String }
     * 
     * 
     */
    @Transient
    public List<String> getRestrictedPartyID() {
        if (restrictedPartyID == null) {
            restrictedPartyID = new ArrayList<String>();
        }
        return this.restrictedPartyID;
    }

    /**
     * 
     * 
     */
    public void setRestrictedPartyID(List<String> restrictedPartyID) {
        this.restrictedPartyID = restrictedPartyID;
    }

    /**
     * Gets the value of the catalogueLine property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the catalogueLine property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getCatalogueLine().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link CatalogueLineType }
     * 
     * 
     */
    @OneToMany(orphanRemoval = true,targetEntity = CatalogueLineType.class, cascade = {
        javax.persistence.CascadeType.ALL
    })
    @JoinColumn(name = "CATALOGUE_LINE_CATALOGUE_TYP_0")
    public List<CatalogueLineType> getCatalogueLine() {
        if (catalogueLine == null) {
            catalogueLine = new ArrayList<CatalogueLineType>();
        }
        return this.catalogueLine;
    }

    /**
     * 
     * 
     */
    public void setCatalogueLine(List<CatalogueLineType> catalogueLine) {
        this.catalogueLine = catalogueLine;
    }

    /**
     * Gets the value of the clause property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the clause property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getClause().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link ClauseType }
     * 
     * 
     */
    @OneToMany(orphanRemoval = true,targetEntity = ClauseType.class, cascade = {
        javax.persistence.CascadeType.ALL
    })
    @JoinColumn(name = "CLAUSE_CATALOGUE_TYPE_HJID")
    public List<ClauseType> getClause() {
        if (clause == null) {
            clause = new ArrayList<ClauseType>();
        }
        return this.clause;
    }

    /**
     * 
     * 
     */
    public void setClause(List<ClauseType> clause) {
        this.clause = clause;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if ((object == null)||(this.getClass()!= object.getClass())) {
            return false;
        }
        if (this == object) {
            return true;
        }
        final CatalogueType that = ((CatalogueType) object);
        {
            String lhsID;
            lhsID = this.getID();
            String rhsID;
            rhsID = that.getID();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "id", lhsID), LocatorUtils.property(thatLocator, "id", rhsID), lhsID, rhsID)) {
                return false;
            }
        }
        {
            String lhsUUID;
            lhsUUID = this.getUUID();
            String rhsUUID;
            rhsUUID = that.getUUID();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "uuid", lhsUUID), LocatorUtils.property(thatLocator, "uuid", rhsUUID), lhsUUID, rhsUUID)) {
                return false;
            }
        }
        {
            TextType lhsName;
            lhsName = this.getName();
            TextType rhsName;
            rhsName = that.getName();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "name", lhsName), LocatorUtils.property(thatLocator, "name", rhsName), lhsName, rhsName)) {
                return false;
            }
        }
        {
            XMLGregorianCalendar lhsIssueDate;
            lhsIssueDate = this.getIssueDate();
            XMLGregorianCalendar rhsIssueDate;
            rhsIssueDate = that.getIssueDate();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "issueDate", lhsIssueDate), LocatorUtils.property(thatLocator, "issueDate", rhsIssueDate), lhsIssueDate, rhsIssueDate)) {
                return false;
            }
        }
        {
            PartyType lhsProviderParty;
            lhsProviderParty = this.getProviderParty();
            PartyType rhsProviderParty;
            rhsProviderParty = that.getProviderParty();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "providerParty", lhsProviderParty), LocatorUtils.property(thatLocator, "providerParty", rhsProviderParty), lhsProviderParty, rhsProviderParty)) {
                return false;
            }
        }
        {
            List<String> lhsPermittedPartyID;
            lhsPermittedPartyID = (((this.permittedPartyID!= null)&&(!this.permittedPartyID.isEmpty()))?this.getPermittedPartyID():null);
            List<String> rhsPermittedPartyID;
            rhsPermittedPartyID = (((that.permittedPartyID!= null)&&(!that.permittedPartyID.isEmpty()))?that.getPermittedPartyID():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "permittedPartyID", lhsPermittedPartyID), LocatorUtils.property(thatLocator, "permittedPartyID", rhsPermittedPartyID), lhsPermittedPartyID, rhsPermittedPartyID)) {
                return false;
            }
        }
        {
            List<String> lhsRestrictedPartyID;
            lhsRestrictedPartyID = (((this.restrictedPartyID!= null)&&(!this.restrictedPartyID.isEmpty()))?this.getRestrictedPartyID():null);
            List<String> rhsRestrictedPartyID;
            rhsRestrictedPartyID = (((that.restrictedPartyID!= null)&&(!that.restrictedPartyID.isEmpty()))?that.getRestrictedPartyID():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "restrictedPartyID", lhsRestrictedPartyID), LocatorUtils.property(thatLocator, "restrictedPartyID", rhsRestrictedPartyID), lhsRestrictedPartyID, rhsRestrictedPartyID)) {
                return false;
            }
        }
        {
            List<CatalogueLineType> lhsCatalogueLine;
            lhsCatalogueLine = (((this.catalogueLine!= null)&&(!this.catalogueLine.isEmpty()))?this.getCatalogueLine():null);
            List<CatalogueLineType> rhsCatalogueLine;
            rhsCatalogueLine = (((that.catalogueLine!= null)&&(!that.catalogueLine.isEmpty()))?that.getCatalogueLine():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "catalogueLine", lhsCatalogueLine), LocatorUtils.property(thatLocator, "catalogueLine", rhsCatalogueLine), lhsCatalogueLine, rhsCatalogueLine)) {
                return false;
            }
        }
        {
            List<ClauseType> lhsClause;
            lhsClause = (((this.clause!= null)&&(!this.clause.isEmpty()))?this.getClause():null);
            List<ClauseType> rhsClause;
            rhsClause = (((that.clause!= null)&&(!that.clause.isEmpty()))?that.getClause():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "clause", lhsClause), LocatorUtils.property(thatLocator, "clause", rhsClause), lhsClause, rhsClause)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    /**
     * Gets the value of the hjid property.
     * 
     * @return
     *     possible object is
     *     {@link Long }
     *     
     */
    @Id
    @Column(name = "HJID")
    @GeneratedValue(strategy = GenerationType.AUTO)
    public Long getHjid() {
        return hjid;
    }

    /**
     * Sets the value of the hjid property.
     * 
     * @param value
     *     allowed object is
     *     {@link Long }
     *     
     */
    public void setHjid(Long value) {
        this.hjid = value;
    }

    @Basic
    @Column(name = "ISSUE_DATE_ITEM")
    @Temporal(TemporalType.DATE)
    public Date getIssueDateItem() {
        return XmlAdapterUtils.unmarshall(XMLGregorianCalendarAsDate.class, this.getIssueDate());
    }

    public void setIssueDateItem(Date target) {
        setIssueDate(XmlAdapterUtils.marshall(XMLGregorianCalendarAsDate.class, target));
    }

    @OneToMany(orphanRemoval = true, targetEntity = CatalogueTypePermittedPartyIDItem.class, cascade = {
        javax.persistence.CascadeType.ALL
    })
    @JoinColumn(name = "PERMITTED_PARTY_IDITEMS_CATA_0")
    public List<CatalogueTypePermittedPartyIDItem> getPermittedPartyIDItems() {
        if (this.permittedPartyIDItems == null) {
            this.permittedPartyIDItems = new ArrayList<CatalogueTypePermittedPartyIDItem>();
        }
        if (ItemUtils.shouldBeWrapped(this.permittedPartyID)) {
            this.permittedPartyID = ItemUtils.wrap(this.permittedPartyID, this.permittedPartyIDItems, CatalogueTypePermittedPartyIDItem.class);
        }
        return this.permittedPartyIDItems;
    }

    public void setPermittedPartyIDItems(List<CatalogueTypePermittedPartyIDItem> value) {
        this.permittedPartyID = null;
        this.permittedPartyIDItems = null;
        this.permittedPartyIDItems = value;
        if (this.permittedPartyIDItems == null) {
            this.permittedPartyIDItems = new ArrayList<CatalogueTypePermittedPartyIDItem>();
        }
        if (ItemUtils.shouldBeWrapped(this.permittedPartyID)) {
            this.permittedPartyID = ItemUtils.wrap(this.permittedPartyID, this.permittedPartyIDItems, CatalogueTypePermittedPartyIDItem.class);
        }
    }

    @OneToMany(orphanRemoval = true, targetEntity = CatalogueTypeRestrictedPartyIDItem.class, cascade = {
        javax.persistence.CascadeType.ALL
    })
    @JoinColumn(name = "RESTRICTED_PARTY_IDITEMS_CAT_0")
    public List<CatalogueTypeRestrictedPartyIDItem> getRestrictedPartyIDItems() {
        if (this.restrictedPartyIDItems == null) {
            this.restrictedPartyIDItems = new ArrayList<CatalogueTypeRestrictedPartyIDItem>();
        }
        if (ItemUtils.shouldBeWrapped(this.restrictedPartyID)) {
            this.restrictedPartyID = ItemUtils.wrap(this.restrictedPartyID, this.restrictedPartyIDItems, CatalogueTypeRestrictedPartyIDItem.class);
        }
        return this.restrictedPartyIDItems;
    }

    public void setRestrictedPartyIDItems(List<CatalogueTypeRestrictedPartyIDItem> value) {
        this.restrictedPartyID = null;
        this.restrictedPartyIDItems = null;
        this.restrictedPartyIDItems = value;
        if (this.restrictedPartyIDItems == null) {
            this.restrictedPartyIDItems = new ArrayList<CatalogueTypeRestrictedPartyIDItem>();
        }
        if (ItemUtils.shouldBeWrapped(this.restrictedPartyID)) {
            this.restrictedPartyID = ItemUtils.wrap(this.restrictedPartyID, this.restrictedPartyIDItems, CatalogueTypeRestrictedPartyIDItem.class);
        }
    }

}
